Realtime dưới góc nhìn của mình sau 10 năm lập trình
1/ Realtime đa số phục vụ cho Game-VideoCall-Chat-IOT
2/ Realtime có nhiều cách lập trình. Toàn bộ đều base trên TCP Socket. Một trong những kỹ thuật realtime phổ biến là :
   -Websocket
   -GRPC
   -Ngoài ra mình có tự custom ra 1 kỹ thuật realtime cho riêng mình.
3/ Realtime hoạt động như sau : 
   -Server : lắng nghe tại 1 cổng (giống như WebServer)
   -Client kết nối với server, kết nối được giữ lại. Client và server có thể truyền nhận dữ liệu lúc nào cũng được, miễn là kết nối chưa bị BREAK
   -Truyền nhận giữa Client-Server : binary hoặc String(Json) do Dev quyết định.
4/ Phân loại server realtime : 
   -Binary hay Json (string)
   -Có Reconnect hay không có Reconnect
   -Scale server động : có cho 2 user bất kỳ realtime với nhau hay không?
5/ Lập trình realtime như thế nào : 
   -Nếu là ứng dụng Chat : cấu hình đơn giản cho Chat (không reconnect). Mô hình scale Server cũng đơn giản hơn
   -Nếu là game (multiplayer hoặc không multiplayer) : mỗi 1 game sẽ có 1 kiến trúc core Realtime khác nhau.
   -Realtime peer-to-peer hay tương tác gián tiếp
Định nghĩa : 
Client : C1,C2,...
Server : S1,S2,...
***Điểm chú ý : có 3 lối lập trình realtime chủ yếu
1/ Cách gián tiếp (mấy dev web hay dùng) : 
      -C1 kết nối đến S1
      -C2 kết nối đến S2
      -S1 và S2 sẽ bắn dữ liệu cho nhau
2/ Kết nối trực tiếp :
      -C1 và C2 cùng kết nối đến S
      -Logic sẽ do S quyết định
3/ Kết nối Peer-To-Peer : (video call)
      - C1 là server cho C2 kết nối
   - Kỹ thuật NAT hole punching (C1 và C2 nằm ở 2 cục modem khác nhau trên internet) : mình tìm hiểu mất quá nhiều thời gian rồi nhưng cũng trở nên vô vọng .
*Đánh giá : mình dev game thì dùng kỹ thuật kết nối trực tiếp. Việc custom và cấu hình auto scale server khác hẳn với tư tưởng phát triển web.
Kết nối trực tiếp sẽ có độ trễ (latency) cực thấp. Thích hợp với các game Moba (kỹ thuật kết nối gián tiếp sẽ bó tay)
Mình chọn Websocket-Binary vì có lớp khẩu trang FRC6455 đeo vào mỗi khi client gởi dữ liệu lên server (FRC6455 troll tý vì càng tìm hiểu các bạn sẽ càng mất thời gian). Việc hack binary của Websocket bằng việc giả mạo gói tin sẽ cực kỳ khó khăn.
Websocket Server sẽ chạy như 1 WebServer và nên chạy chung với WebServer để giải quyết 1 số API cần thiết cho Server